name: Docker

on:
  push:
    # Publish `v1.2.3` tags as releases.
    branches:
      - master

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: gurobi
  GUROBI_VERSIONS: 8.1.1 9.0.2 

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          for GUROBI_VERSION in $GUROBI_VERSIONS; do
          
            echo "GUROBI_VERSION: $GUROBI_VERSION"
          
            GUROBI_MAJOR_VERSION=$(echo $GUROBI_VERSION | cut -d'.' -f 1-2)
            GUROBI_VERSION_TAG=$(echo $GUROBI_VERSION | sed 's/\.//g')
            GUROBI_USER=gurobi
          
            if [ -f docker-compose.test.yml ]; then
              docker-compose --file docker-compose.test.yml build
              docker-compose --file docker-compose.test.yml run sut
            else
              docker build . --build-arg GUROBI_USER=$GUROBI_USER \
                --build-arg GUROBI_VERSION=$GUROBI_VERSION \
                --build-arg GUROBI_MAJOR_VERSION=$GUROBI_MAJOR_VERSION \
                --build-arg GUROBI_VERSION_TAG=$GUROBI_VERSION_TAG \
                --file Dockerfile
            fi
          done

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build and push images
        run: |
          for GUROBI_VERSION in $GUROBI_VERSIONS; do
          
            echo "GUROBI_VERSION: $GUROBI_VERSION"
          
            GUROBI_MAJOR_VERSION=$(echo $GUROBI_VERSION | cut -d'.' -f 1-2)
            GUROBI_VERSION_TAG=$(echo $GUROBI_VERSION | sed 's/\.//g')
            GUROBI_USER=gurobi

            docker build . --build-arg GUROBI_USER=$GUROBI_USER \
              --build-arg GUROBI_VERSION=$GUROBI_VERSION \
              --build-arg GUROBI_MAJOR_VERSION=$GUROBI_MAJOR_VERSION \
              --build-arg GUROBI_VERSION_TAG=$GUROBI_VERSION_TAG \
              --file Dockerfile --tag $IMAGE_NAME
          done

      - name: Log into registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login docker.io -u sebwink --password-stdin

      - name: Push image
        run: |
          for GUROBI_VERSION in $GUROBI_VERSIONS; do
          
            echo "PUSH for GUROBI_VERSION: $GUROBI_VERSION"
          
            GUROBI_MAJOR_VERSION=$(echo $GUROBI_VERSION | cut -d'.' -f 1-2)
            GUROBI_VERSION_TAG=$(echo $GUROBI_VERSION | sed 's/\.//g')
          
            IMAGE_ID_GITHUB_PKG=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
            IMAGE_ID_DOCKER_HUB=docker.io/sebwink/$IMAGE_NAME

            # Change all uppercase to lowercase
            IMAGE_ID_GITHUB_PKG=$(echo $IMAGE_ID_GITHUB_PKG | tr '[A-Z]' '[a-z]')
            IMAGE_ID_DOCKER_HUB=$(echo $IMAGE_ID_DOCKER_HUB | tr '[A-Z]' '[a-z]')

            echo IMAGE_ID_GITHUB_PKG=$IMAGE_ID_GITHUB_PKG
            echo IMAGE_ID_DOCKER_HUB=$IMAGE_ID_DOCKER_HUB
            echo GUROBI_VERSION=$GUROBI_VERSION
            echo GUROBI_MAJOR_VERSION=$GUROBI_MAJOR_VERSION
            echo GUROBI_VERSION_TAG=$GUROBI_VERSION_TAG

            GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          
            docker tag $IMAGE_NAME $IMAGE_ID_GITHUB_PKG:$GUROBI_VERSION
            docker push $IMAGE_ID_GITHUB_PKG:$GUROBI_VERSION
            docker tag $IMAGE_NAME $IMAGE_ID_GITHUB_PKG-$GUROBI_VERSION:$GIT_HASH
            docker push $IMAGE_ID_GITHUB_PKG-$GUROBI_VERSION:$GIT_HASH
                    
            docker tag $IMAGE_NAME $IMAGE_ID_DOCKER_HUB:$GUROBI_VERSION 
            docker push $IMAGE_ID_DOCKER_HUB:$GUROBI_VERSION
            docker tag $IMAGE_NAME $IMAGE_ID_DOCKER_HUB-$GUROBI_VERSION:$GIT_HASH
            docker push $IMAGE_ID_DOCKER_HUB-$GUROBI_VERSION:$GIT_HASH
            
          done
